@page "/weather"
@using SharedClassLibrary.Contracts
@using SharedClassLibrary.DTOs
@inject IWeather WeatherService
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims

<PageTitle>Weather</PageTitle>

<h1>Weather</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <p>User Forecasts</p>
        <tbody>
            <AuthorizeView Roles="Admin">
                @foreach (var forecast in forecasts)
                {
                    <tr>
                        <td>@forecast.Date.ToShortDateString()</td>
                        <td>@forecast.TemperatureC</td>
                        <td>@forecast.TemperatureF</td>
                        <td>@forecast.Summary</td>
                    </tr>
                }
            </AuthorizeView>

        </tbody>
        <p>Admin Forecasts</p>
        <tbody>
            <AuthorizeView Roles="Admin">
                @foreach (var forecast in adminforecasts)
                {
                    <tr>
                        <td>@forecast.Date.ToShortDateString()</td>
                        <td>@forecast.TemperatureC</td>
                        <td>@forecast.TemperatureF</td>
                        <td>@forecast.Summary</td>
                    </tr>
                }
            </AuthorizeView>
        </tbody>

    </table>
}

@code {
    private WeatherForecast[]? forecasts;
    private WeatherForecast[]? adminforecasts;


    protected override async Task OnInitializedAsync()
    {


        forecasts = await WeatherService.GetWeatherForecast();
        adminforecasts = await WeatherService.GetWeatherForecastAdmin();

    }
}
